{"version":3,"sources":["../js/sw.js"],"names":["jsFolder","staticCacheName","contentImgsCache","allCaches","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","keys","cacheNames","Promise","all","filter","cacheName","startsWith","includes","map","delete","data","action","skipWaiting","requestUrl","URL","request","url","console","log"],"mappings":";;AAAA,IAAIA,WAAW,IAAf;AACA,IAAIC,kBAAkB,uBAAtB;AACA,IAAIC,mBAAmB,yBAAvB;AACA,IAAIC,YAAY,CACdF,eADc,EAEdC,gBAFc,CAAhB;;AAKAE,KAAKC,gBAAL,CAAsB,SAAtB,EAAiC,UAASC,KAAT,EAAgB;AAC7CA,QAAMC,SAAN,CACEC,OAAOC,IAAP,CAAYR,eAAZ,EAA6BS,IAA7B,CAAkC,UAASC,KAAT,EAAgB;AAChD,WAAOA,MAAMC,MAAN,CAAa,CAClB,aADkB,EAElB,kBAFkB,QAGdZ,QAHc,qBAIdA,QAJc,yBAKdA,QALc,0BAMlB,4BANkB,EAOlB,iBAPkB,CAAb,CAAP;AASD,GAVD,CADF;AAaD,CAdH;;AAgBEI,KAAKC,gBAAL,CAAsB,UAAtB,EAAkC,UAASC,KAAT,EAAgB;AAChDA,QAAMC,SAAN,CACEC,OAAOK,IAAP,GAAcH,IAAd,CAAmB,UAASI,UAAT,EAAqB;AACtC,WAAOC,QAAQC,GAAR,CACLF,WAAWG,MAAX,CAAkB,UAASC,SAAT,EAAoB;AACpC,aAAOA,UAAUC,UAAV,CAAqB,aAArB,KACA,CAAChB,UAAUiB,QAAV,CAAmBF,SAAnB,CADR;AAED,KAHD,EAGGG,GAHH,CAGO,UAASH,SAAT,EAAoB;AACzB,aAAOV,OAAOc,MAAP,CAAcJ,SAAd,CAAP;AACD,KALD,CADK,CAAP;AAQD,GATD,CADF;AAYD,CAbD;;AAeAd,KAAKC,gBAAL,CAAsB,SAAtB,EAAiC,UAASC,KAAT,EAAgB;AAC/C,MAAIA,MAAMiB,IAAN,CAAWC,MAAX,KAAsB,aAA1B,EAAyC;AACvCpB,SAAKqB,WAAL;AACD;AACF,CAJD;;AAMArB,KAAKC,gBAAL,CAAsB,OAAtB,EAA+B,UAASC,KAAT,EAAgB;AAC7C,MAAIoB,aAAa,IAAIC,GAAJ,CAAQrB,MAAMsB,OAAN,CAAcC,GAAtB,CAAjB;;AAEAC,UAAQC,GAAR,CAAYL,UAAZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CApBC","file":"sw.js","sourcesContent":["var jsFolder = 'js';\r\nvar staticCacheName = 'restaurant-reviews-v1';\r\nvar contentImgsCache = 'restaurant-reviews-imgs';\r\nvar allCaches = [\r\n  staticCacheName,\r\n  contentImgsCache\r\n];\r\n\r\nself.addEventListener('install', function(event) {\r\n    event.waitUntil(\r\n      caches.open(staticCacheName).then(function(cache) {\r\n        return cache.addAll([\r\n          '/index.html',\r\n          '/restaurant.html',\r\n          `/${jsFolder}/main.js`,\r\n          `/${jsFolder}/dbhelper.js`,\r\n          `/${jsFolder}/restaurant_info.js`,\r\n          '/css/styles-restaurant.css',\r\n          '/css/styles.css'\r\n        ]);\r\n      })\r\n    );\r\n  });\r\n\r\n  self.addEventListener('activate', function(event) {\r\n    event.waitUntil(\r\n      caches.keys().then(function(cacheNames) {\r\n        return Promise.all(\r\n          cacheNames.filter(function(cacheName) {\r\n            return cacheName.startsWith('restaurant-') &&\r\n                   !allCaches.includes(cacheName);\r\n          }).map(function(cacheName) {\r\n            return caches.delete(cacheName);\r\n          })\r\n        );\r\n      })\r\n    );\r\n  });\r\n\r\n  self.addEventListener('message', function(event) {\r\n    if (event.data.action === 'skipWaiting') {\r\n      self.skipWaiting();\r\n    }\r\n  });\r\n\r\n  self.addEventListener('fetch', function(event) {\r\n    var requestUrl = new URL(event.request.url);\r\n    \r\n    console.log(requestUrl);\r\n    // if (requestUrl.origin === location.origin) {\r\n    //   if (requestUrl.pathname === '/') {\r\n    //     event.respondWith(caches.match('/skeleton'));\r\n    //     return;\r\n    //   }\r\n    //   if (requestUrl.pathname.startsWith('/photos/')) {\r\n    //     event.respondWith(servePhoto(event.request));\r\n    //     return;\r\n    //   }\r\n    //   // TODO: respond to avatar urls by responding with\r\n    //   // the return value of serveAvatar(event.request)\r\n    //   if (requestUrl.pathname.startsWith('/avatars/')) {\r\n    //     event.respondWith(serveAvatar(event.request));\r\n    //     return;\r\n    //   }\r\n    // }\r\n});"]}