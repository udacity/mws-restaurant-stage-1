{"version":3,"sources":["../js/restaurant_info.js"],"names":["restaurant","map","document","addEventListener","event","fetchRestaurantFromURL","initServiceWorker","navigator","window","serviceWorker","register","then","registration","console","log","scope","catch","err","initMap","error","self","google","maps","Map","getElementById","zoom","center","latlng","scrollwheel","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","callback","id","getParameterByName","fetchRestaurantById","fillRestaurantHTML","name","innerHTML","address","fillRestaurantPicture","cuisine","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","picture","className","image_large","createElement","setAttribute","imageUrlForRestaurant","image_medium","image","appendChild","operatingHours","hours","key","row","day","time","reviews","container","title","noReviews","forEach","createReviewHTML","review","reviewArticle","reviewHeader","date","rating","comments","breadcrumb","li","url","location","href","replace","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant;\r\nvar map;\r\n\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  fetchRestaurantFromURL();\r\n  initServiceWorker();\r\n});\r\n\r\nlet initServiceWorker = () => {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('/sw.js').then(function (registration) {\r\n        // Registration was successful\r\n        console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n      }).catch(function (err) {\r\n        // registration failed :(\r\n        console.log('ServiceWorker registration failed: ', err);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nlet initMap = () => {\r\n  fetchRestaurantFromURL((error, restaurant) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.map = new google.maps.Map(document.getElementById('map'), {\r\n        zoom: 16,\r\n        center: restaurant.latlng,\r\n        scrollwheel: false\r\n      });\r\n      fillBreadcrumb();\r\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Get current restaurant from page URL.\r\n */\r\nlet fetchRestaurantFromURL = (callback) => {\r\n      if (self.restaurant) { // restaurant already fetched!\r\n        callback(null, self.restaurant)\r\n        return;\r\n      }\r\n      const id = getParameterByName('id');\r\n      if (!id) { // no id found in URL\r\n        error = 'No restaurant id in URL'\r\n        callback(error, null);\r\n      } else {\r\n        DBHelper.fetchRestaurantById(id, (error, restaurant) => {\r\n          self.restaurant = restaurant;\r\n          if (!restaurant) {\r\n            console.error(error);\r\n            return;\r\n          }\r\n          fillRestaurantHTML();\r\n\r\n          if (!callback) {\r\n            return;\r\n          }\r\n\r\n          callback(null, restaurant)\r\n        });\r\n      }\r\n    }\r\n\r\n/**\r\n * Create restaurant HTML and add it to the webpage\r\n */\r\nlet fillRestaurantHTML = (restaurant = self.restaurant) => {\r\n      const name = document.getElementById('restaurant-name');\r\n      name.innerHTML = restaurant.name;\r\n\r\n      const address = document.getElementById('restaurant-address');\r\n      address.innerHTML = restaurant.address;\r\n\r\n      fillRestaurantPicture(restaurant);\r\n\r\n      const cuisine = document.getElementById('restaurant-cuisine');\r\n      cuisine.innerHTML = restaurant.cuisine_type;\r\n\r\n      // fill operating hours\r\n      if (restaurant.operating_hours) {\r\n        fillRestaurantHoursHTML();\r\n      }\r\n      // fill reviews\r\n      fillReviewsHTML();\r\n    }\r\n\r\nlet fillRestaurantPicture = (restaurant) => {\r\n      const picture = document.getElementById('restaurant-img');\r\n      picture.className = 'restaurant-img'\r\n\r\n      const image_large = document.createElement('source');\r\n      image_large.setAttribute('media', '(min-width: 1000px)');\r\n      image_large.setAttribute('srcset', DBHelper.imageUrlForRestaurant(restaurant, 'large'));\r\n      image_large.setAttribute('alt', restaurant.name);\r\n\r\n      const image_medium = document.createElement('source');\r\n      image_medium.setAttribute('media', '(min-width: 650px)');\r\n      image_medium.setAttribute('srcset', DBHelper.imageUrlForRestaurant(restaurant, 'medium'));\r\n      image_medium.setAttribute('alt', restaurant.name);\r\n\r\n      const image = document.createElement('img');\r\n      image.setAttribute('srcset', DBHelper.imageUrlForRestaurant(restaurant, 'small'));\r\n      image.setAttribute('src', DBHelper.imageUrlForRestaurant(restaurant, 'small'));\r\n      image.setAttribute('alt', restaurant.name);\r\n\r\n      picture.appendChild(image_large);\r\n      picture.appendChild(image_medium);\r\n      picture.appendChild(image);\r\n    }\r\n\r\n/**\r\n * Create restaurant operating hours HTML table and add it to the webpage.\r\n */\r\nlet fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\r\n      const hours = document.getElementById('restaurant-hours');\r\n      for (let key in operatingHours) {\r\n        const row = document.createElement('tr');\r\n\r\n        const day = document.createElement('td');\r\n        day.innerHTML = key;\r\n        day.className = 'restaurant-day';\r\n        row.appendChild(day);\r\n\r\n        const time = document.createElement('td');\r\n        time.innerHTML = operatingHours[key];\r\n        time.className = 'restaurant-time';\r\n        row.appendChild(time);\r\n\r\n        hours.appendChild(row);\r\n      }\r\n    }\r\n\r\n/**\r\n * Create all reviews HTML and add them to the webpage.\r\n */\r\nlet fillReviewsHTML = (reviews = self.restaurant.reviews) => {\r\n      const container = document.getElementById('reviews-container');\r\n      const title = document.createElement('h2');\r\n      title.innerHTML = 'Reviews';\r\n      container.appendChild(title);\r\n\r\n      if (!reviews) {\r\n        const noReviews = document.createElement('p');\r\n        noReviews.innerHTML = 'No reviews yet!';\r\n        container.appendChild(noReviews);\r\n        return;\r\n      }\r\n\r\n      reviews.forEach(review => {\r\n        container.appendChild(createReviewHTML(review));\r\n      });\r\n      //container.appendChild(ul);\r\n    }\r\n\r\n/**\r\n * Create review HTML and add it to the webpage.\r\n */\r\nlet createReviewHTML = (review) => {\r\n      const reviewArticle = document.createElement('article');\r\n      reviewArticle.className = 'review';\r\n\r\n      const reviewHeader = document.createElement('div');\r\n      reviewHeader.className = 'review-header';\r\n      reviewArticle.appendChild(reviewHeader);\r\n\r\n      const name = document.createElement('h2');\r\n      name.innerHTML = review.name;\r\n      reviewHeader.appendChild(name);\r\n\r\n      const date = document.createElement('h3');\r\n      date.innerHTML = review.date;\r\n      reviewHeader.appendChild(date);\r\n\r\n      const rating = document.createElement('p');\r\n      rating.innerHTML = `Rating: ${review.rating}`;\r\n      rating.className = 'review-rating';\r\n      reviewArticle.appendChild(rating);\r\n\r\n      const comments = document.createElement('p');\r\n      comments.innerHTML = review.comments;\r\n      reviewArticle.appendChild(comments);\r\n\r\n      return reviewArticle;\r\n    }\r\n\r\n/**\r\n * Add restaurant name to the breadcrumb navigation menu\r\n */\r\nlet fillBreadcrumb = (restaurant = self.restaurant) => {\r\n      const breadcrumb = document.getElementById('breadcrumb');\r\n      const li = document.createElement('li');\r\n      li.innerHTML = restaurant.name;\r\n      breadcrumb.appendChild(li);\r\n    }\r\n\r\n/**\r\n * Get a parameter by name from page URL.\r\n */\r\nlet getParameterByName = (name, url) => {\r\n      if (!url)\r\n        url = window.location.href;\r\n      name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n      const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\r\n        results = regex.exec(url);\r\n      if (!results)\r\n        return null;\r\n      if (!results[2])\r\n        return '';\r\n      return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n    }\r\n"]}